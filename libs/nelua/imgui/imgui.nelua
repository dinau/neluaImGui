##[[
linklib 'cimgui'
]]
-- require 'glad' -- GLAD must be required before GLFW!
-- require 'glfw'

--- Constant value
global ImGuiHoveredFlags_DelayNone   = 1 << 14
global ImGuiHoveredFlags_DelayShort  = 1 << 15
global ImGuiHoveredFlags_DelayNormal = 1 << 16
global ImGuiTextFlags_None = 0

--- Struct type

global ImGuiStyle = @record{}
global ImFont= @record{}
global ImFontConfig = @record{}
global ImFontAtlas = @record{}
global ImGuiContext = @record{}
global ImDrawData = @record{}
global ImGuiInputTextCallbackData = @record{}
global ImVec2 = @record{x: cfloat, y: cfloat}
global ImVec4 = @record{x: cfloat, y: cfloat, z: cfloat, w: cfloat}
global ImGuiIO = @record{Framerate: cfloat}

--- Type defs
global ImGuiWindowFlags = cint
global ImGuiInputTextFlags = cint
global ImGuiSliderFlags = cint
global ImGuiColorEditFlags = cint
global ImGuiHoveredFlags = cint
global ImTextureID = uint64
global ImWchar = uint16
global ImGuiCol = cint
global ImGuiComboFlags = cint
global ImGuiSelectableFlags = cint

--- Functions
global function igImage(user_texture_id: ImTextureID ,image_size: ImVec2, uv0: ImVec2, uv1: ImVec2, tint_col: ImVec4, border_col: ImVec4) <cimport> end
global function igGET_FLT_MAX(): cfloat <cimport> end
global function igGET_FLT_MIN(): cfloat <cimport> end
global function igPlotLines_FloatPtr(label:cstring
                                    ,values: *cfloat
                                    ,values_count:  cint
                                    ,values_offset: cint
                                    ,overlay_text:  cstring
                                    ,scale_min:     cfloat
                                    ,scale_max:     cfloat
                                    ,graph_size:    ImVec2
                                    ,stride:        cint) <cimport> end
global function igGetTime(): float64 <cimport> end
global function igBeginTooltip(): boolean <cimport> end
global function igEndTooltip(): boolean <cimport> end
global function igIsItemHovered(flags: ImGuiHoveredFlags ): boolean <cimport> end
global function igColorEdit3(label: cstring, col: *cfloat,flags: ImGuiColorEditFlags ): boolean <cimport> end
global function igSliderFloat(label: cstring ,v: *cfloat,v_min: cfloat,v_max: cfloat,format: cstring,flags: ImGuiSliderFlags ): boolean <cimport> end
global function igCheckbox(label: cstring, v: *boolean): boolean <cimport> end
global function igInputTextWithHint(label: cstring, hint: cstring ,buf: cstring ,buf_size: isize,flags: ImGuiInputTextFlags, callback: function(data: *ImGuiInputTextCallbackData): cint ,user_data: *void): boolean <cimport> end
global function igGetIO(): *ImGuiIO <cimport> end
global function igButton(label: cstring,size: ImVec2 ): boolean <cimport> end
global function igGetVersion(): cstring <cimport> end
global function igSameLine(offset_from_start_x: cfloat,spacing: cfloat) <cimport> end
global function igText(fmt: cstring <const>, ...: cvarargs) <cimport> end
global function igBegin(name: cstring <const>, p_open: *boolean ,flags: ImGuiWindowFlags ): boolean <cimport> end
global function igCreateContext(shared_font_atlas: *ImFontAtlas): *ImGuiContext <cimport> end
global function igDestroyContext(ctx: *ImGuiContext) <cimport> end
global function igEnd(): void <cimport> end
global function igGetDrawData(): *ImDrawData <cimport> end
global function igNewFrame() <cimport> end
global function igRender() <cimport> end
global function igShowDemoWindow(p_open: *boolean) <cimport> end
global function ImFontAtlas_AddFontDefault(atlas: *ImFontAtlas, font_cfg: *ImFontConfig): *ImFont <cimport> end
global function ImFontAtlas_AddFontFromFileTTF(atlas: *ImFontAtlas,filename: cstring, size_pixels: cfloat, font_cfg: *ImFontConfig, glyph_ranges: *ImWchar): *ImFont <cimport> end
global function ImFontConfig_ImFontConfig(): *ImFontConfig <cimport> end
global function igSeparatorText(label: cstring) <cimport> end
global function igGetCursorScreenPos(pOut: *ImVec2) <cimport> end
global function igBeginItemTooltip(): boolean <cimport> end
global function igPushID_Int(int_id: cint) <cimport> end
global function igPushStyleColor_Vec4(idx: ImGuiCol ,col: ImVec4 ) <cimport> end
global function igPopStyleColor(count: cint) <cimport> end
global function igPopID() <cimport> end
global function igSetNextItemWidth(item_width: cfloat) <cimport> end
global function igBeginCombo(label: cstring,preview_value: cstring, flags: ImGuiComboFlags ): boolean <cimport> end
global function igSelectable_BoolPtr(label: cstring,p_selected: *boolean, flags: ImGuiSelectableFlags , size: ImVec2): boolean <cimport> end
global function igSetItemDefaultFocus() <cimport> end
global function igEndCombo() <cimport> end
global function igSetClipboardText(text: cstring) <cimport> end
global function igInputText(label: cstring,buf: cstring, buf_size: cint, flags: ImGuiInputTextFlags ,callback: function(data: *ImGuiInputTextCallbackData): cint, user_data: *void): boolean <cimport> end
global function igNewLine() <cimport> end
global function igListBox_Str_arr(label: cstring,current_item: *cint,items: cstring,items_count: cint,height_in_items: cint): boolean <cimport> end

global ImGuiCol_enum =  @enum{
    ImGuiCol_Text = 0,
    ImGuiCol_TextDisabled,
    ImGuiCol_WindowBg,
    ImGuiCol_ChildBg,
    ImGuiCol_PopupBg,
    ImGuiCol_Border,
    ImGuiCol_BorderShadow,
    ImGuiCol_FrameBg,
    ImGuiCol_FrameBgHovered,
    ImGuiCol_FrameBgActive,
    ImGuiCol_TitleBg,
    ImGuiCol_TitleBgActive,
    ImGuiCol_TitleBgCollapsed,
    ImGuiCol_MenuBarBg,
    ImGuiCol_ScrollbarBg,
    ImGuiCol_ScrollbarGrab,
    ImGuiCol_ScrollbarGrabHovered,
    ImGuiCol_ScrollbarGrabActive,
    ImGuiCol_CheckMark,
    ImGuiCol_SliderGrab,
    ImGuiCol_SliderGrabActive,
    ImGuiCol_Button,
    ImGuiCol_ButtonHovered,
    ImGuiCol_ButtonActive,
    ImGuiCol_Header,
    ImGuiCol_HeaderHovered,
    ImGuiCol_HeaderActive,
    ImGuiCol_Separator,
    ImGuiCol_SeparatorHovered,
    ImGuiCol_SeparatorActive,
    ImGuiCol_ResizeGrip,
    ImGuiCol_ResizeGripHovered,
    ImGuiCol_ResizeGripActive,
    ImGuiCol_TabHovered,
    ImGuiCol_Tab,
    ImGuiCol_TabSelected,
    ImGuiCol_TabSelectedOverline,
    ImGuiCol_TabDimmed,
    ImGuiCol_TabDimmedSelected,
    ImGuiCol_TabDimmedSelectedOverline,
    ImGuiCol_DockingPreview,
    ImGuiCol_DockingEmptyBg,
    ImGuiCol_PlotLines,
    ImGuiCol_PlotLinesHovered,
    ImGuiCol_PlotHistogram,
    ImGuiCol_PlotHistogramHovered,
    ImGuiCol_TableHeaderBg,
    ImGuiCol_TableBorderStrong,
    ImGuiCol_TableBorderLight,
    ImGuiCol_TableRowBg,
    ImGuiCol_TableRowBgAlt,
    ImGuiCol_TextLink,
    ImGuiCol_TextSelectedBg,
    ImGuiCol_DragDropTarget,
    ImGuiCol_NavCursor,
    ImGuiCol_NavWindowingHighlight,
    ImGuiCol_NavWindowingDimBg,
    ImGuiCol_ModalWindowDimBg,
    ImGuiCol_COUNT,
}

global function igStyleColorsDark   (dst: *ImGuiStyle) <cimport> end
global function igStyleColorsLight  (dst: *ImGuiStyle) <cimport> end
global function igStyleColorsClassic(dst: *ImGuiStyle) <cimport> end
