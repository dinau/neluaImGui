--
-- Notice:
--   Before generate nelua wrapper for libaries, comment out a line 1600 in nelua-lang/lualib/nelua/plugins/nldecl.nelua
--   https://github.com/edubart/nelua-lang/blob/a69a12d1e1e5ee0bfab299350e5d707ff7b2e744/lualib/nelua/plugins/nldecl.lua#L1600
--        else
--          -- TODO: handle typeof?
--          --error('unhandled '..typespecifier.tag)   <--- Comment out this line
--
-----------------
--- cimgui.nelua
-----------------
##[==[
-- import Nelua Decl plugin and filesystem utils.
local nldecl = require 'nelua.plugins.nldecl'
local fs = require 'nelua.utils.fs'

-- Generate nelua bindings file. (It will be always regenerated)
  nldecl.generate_bindings_file{
    defines = {'CIMGUI_DEFINE_ENUMS_AND_STRUCTS'
               ,'bool _Bool'
               ,'IMGUI_IMPL_API "extern \"C\" __declspec(dllexport)"'
               ,'ImDrawIdx unsigned int'
              },
    output_file = 'libs/nelua/imgui/cimgui.nelua',
    -- what C file we should generate bindings for and parse?
    parse_includes = {'cimgui.h'},
    -- what symbol name prefix should we import from that file?
    include_names = {'^ig','^Im'},
    include_dirs = {'libs/cimgui'}
  }
]==]
print("Generated [libs/imgui/cimgui.nelua]")

--------------------
--- imspinner.nelua
--------------------
##[==[
-- import Nelua Decl plugin and filesystem utils.
local nldecl = require 'nelua.plugins.nldecl'
local fs = require 'nelua.utils.fs'

-- Generate nelua bindings file. (It will be always regenerated)
  nldecl.generate_bindings_file{
    defines = {'CIMGUI_DEFINE_ENUMS_AND_STRUCTS'
               ,'bool _Bool'
               ,'IMGUI_IMPL_API "extern \"C\" __declspec(dllexport)"'
               ,'ImDrawIdx unsigned int'
              },
    output_file = 'libs/nelua/imgui/imspinner.nelua',
    -- what C file we should generate bindings for and parse?
    parse_includes = {'cimspinner.h'},
    -- what symbol name prefix should we import from that file?
    include_names = {'^Spinner','demoSpinners'},
    include_dirs = {'libs/cimgui','libs/cimspinner'}
  }
]==]
print("Generated [libs/imgui/imspinner.nelua]")

------------------
--- imKnobs.nelua
------------------
##[==[
-- import Nelua Decl plugin and filesystem utils.
local nldecl = require 'nelua.plugins.nldecl'
local fs = require 'nelua.utils.fs'

-- Generate nelua bindings file. (It will be always regenerated)
  nldecl.generate_bindings_file{
    defines = {'CIMGUI_DEFINE_ENUMS_AND_STRUCTS'
               ,'bool _Bool'
               ,'IMGUI_IMPL_API "extern \"C\" __declspec(dllexport)"'
               ,'ImDrawIdx unsigned int'
              },
    output_file = 'libs/nelua/imgui/imknobs.nelua',
    -- what C file we should generate bindings for and parse?
    parse_includes = {'cimgui-knobs.h'},
    -- what symbol name prefix should we import from that file?
    include_names = {'^IgKnob'},
    include_dirs = {'libs/cimgui','libs/cimgui-knobs'}
  }

if ccinfo.is_windows then
end
]==]
print("Generated [libs/imgui/imknobs.nelua]")

-------------------
--- imtoggle.nelua
-------------------
##[==[
-- import Nelua Decl plugin and filesystem utils.
local nldecl = require 'nelua.plugins.nldecl'
local fs = require 'nelua.utils.fs'

-- Generate nelua bindings file. (It will be always regenerated)
  nldecl.generate_bindings_file{
    defines = {'CIMGUI_DEFINE_ENUMS_AND_STRUCTS'
               ,'bool _Bool'
               ,'IMGUI_IMPL_API "extern \"C\" __declspec(dllexport)"'
               ,'ImDrawIdx unsigned int'
              },
    output_file = 'libs/nelua/imgui/imtoggle.nelua',
    -- what C file we should generate bindings for and parse?
    parse_includes = {'cimgui_toggle.h','cimgui_toggle_palette.h'},
    -- what symbol name prefix should we import from that file?
    include_names = {'^ImGuiToggle','^Toggle'},
    include_dirs = {'libs/cimgui','libs/cimgui_toggle'}
  }

if ccinfo.is_windows then
end
]==]
print("Generated [libs/imgui/imtoggle.nelua]")

--------------------------
--- imcolortextedit.nelua
--------------------------
##[==[
-- import Nelua Decl plugin and filesystem utils.
local nldecl = require 'nelua.plugins.nldecl'
local fs = require 'nelua.utils.fs'

-- Generate nelua bindings file. (It will be always regenerated)
  nldecl.generate_bindings_file{
    defines = {'CIMGUI_DEFINE_ENUMS_AND_STRUCTS'
               ,'bool _Bool'
               ,'IMGUI_IMPL_API "extern \"C\" __declspec(dllexport)"'
               ,'ImDrawIdx unsigned int'
              },
    output_file = 'libs/nelua/imgui/imcolortextedit.nelua',
    -- what C file we should generate bindings for and parse?
    parse_includes = {'cimCTE.h'},
    -- what symbol name prefix should we import from that file?
    include_names = {'^TextEditor'},
    include_dirs = {'libs/cimgui','libs/cimCTE'}
  }

if ccinfo.is_windows then
end
]==]
print("Generated [libs/imgui/imcolortextedit.nelua]")

-------------------
--- imguizmo.nelua
-------------------
##[==[
-- import Nelua Decl plugin and filesystem utils.
local nldecl = require 'nelua.plugins.nldecl'
local fs = require 'nelua.utils.fs'

-- Generate nelua bindings file. (It will be always regenerated)
  nldecl.generate_bindings_file{
    defines = {'bool _Bool'
               ,'IMGUI_IMPL_API "extern \"C\" __declspec(dllexport)"'
               ,'ImDrawIdx unsigned int'
               ,'CIMGUI_DEFINE_ENUMS_AND_STRUCTS'
              },
    output_file = 'libs/nelua/imgui/imguizmo.nelua',
    -- what C file we should generate bindings for and parse?
    parse_includes = {'cimguizmo.h'},
    -- what symbol name prefix should we import from that file?
    include_names = {'^ImGuizmo'},
    include_dirs = {'libs/cimgui','libs/cimguizmo'}
  }

if ccinfo.is_windows then
end
]==]
print("Generated [libs/imgui/imguizmo.nelua]")

------------------
--- imnodes.nelua
------------------
##[==[
-- import Nelua Decl plugin and filesystem utils.
local nldecl = require 'nelua.plugins.nldecl'
local fs = require 'nelua.utils.fs'

-- Generate nelua bindings file. (It will be always regenerated)
  nldecl.generate_bindings_file{
    defines = {'bool _Bool'
               ,'IMGUI_IMPL_API "extern \"C\" __declspec(dllexport)"'
               ,'ImDrawIdx unsigned int'
               ,'CIMGUI_DEFINE_ENUMS_AND_STRUCTS'
              },
    output_file = 'libs/nelua/imgui/imnodes.nelua',
    -- what C file we should generate bindings for and parse?
    parse_includes = {'cimnodes.h','cimnodes_template.h'},
    -- what symbol name prefix should we import from that file?
    include_names = {'^ImNodes','^imnodes_','getIOKeyCtrlPtr'},
    include_dirs = {'libs/cimgui','libs/cimnodes','libs/cimnodes/generator'}
  }

if ccinfo.is_windows then
end
]==]
print("Generated [libs/imgui/imnodes.nelua]")

-----------------------
--- imfiledialog.nelua
-----------------------
-- It needs to add '#include "cimgui.h"' line to libs/CImGuiFileDialog/libs/ImGuiFileDialog/ImGuiFileDialog.h.

##[==[
-- import Nelua Decl plugin and filesystem utils.
local nldecl = require 'nelua.plugins.nldecl'
local fs = require 'nelua.utils.fs'

-- Generate nelua bindings file. (It will be always regenerated)
  nldecl.generate_bindings_file{
    defines = {'bool _Bool'
               ,'IMGUI_IMPL_API "extern \"C\" __declspec(dllexport)"'
               ,'ImDrawIdx unsigned int'
               ,'CIMGUI_DEFINE_ENUMS_AND_STRUCTS'
               ,'CUSTOM_IMGUIFILEDIALOG_CONFIG "customIconFont.h"'
              },
    output_file = 'libs/nelua/imgui/imfiledialog.nelua',
    -- what C file we should generate bindings for and parse?
    parse_includes = {'ImGuiFileDialog.h'},
    -- what symbol name prefix should we import from that file?
    include_names = {'^IGFD','^ImGuiFileDialog'},
    include_dirs = {'libs/cimgui'
                   ,'libs/CImGuiFileDialog'
                   ,'libs/CImGuiFileDialog/libs/ImGuiFileDialog'
                   ,'examples/utils/fonticon'
                   }
  }

if ccinfo.is_windows then
end
]==]
print("Generated [libs/imgui/imfiledialog.nelua]")
